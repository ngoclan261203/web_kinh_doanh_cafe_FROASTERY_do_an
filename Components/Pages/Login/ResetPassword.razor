@page "/reset-password"
@using FROASTERY.Models
@rendermode InteractiveServer
@using FROASTERY.Data;
@using Microsoft.EntityFrameworkCore;
@inject AppDbContext DbContext
@inject NavigationManager NavigationManager
<PageTitle>Lấy lại mật khẩu</PageTitle>
    <div style="background-color: #215224; padding: 2rem; border-radius: 10px; width: 100%; max-width: 400px; box-shadow: 0 4px 10px rgba(0,0,0,0.15);">
        <h3 class="text-center mb-4" style="color: white">Đặt lại mật khẩu</h3>

        @if (ShowErrors)
        {
            <div class="alert alert-danger">@ErrorMessage</div>
        }
        else if (resettingPassword)
        {
            <EditForm Model="resetPasswordModel" OnValidSubmit="HandleResetNewPassword">
                <DataAnnotationsValidator />


                <div class="mb-3" style="color: white">
                    <label>Mật khẩu mới:</label>
                    <InputText @bind-Value="resetPasswordModel.NewPassword" type="password"
                               class="form-control"
                               placeholder="Nhập mật khẩu mới"
                               title="Nhập mật khẩu mới" />
                    <ValidationMessage For="@(() => resetPasswordModel.NewPassword)" />
                </div>

                <div class="mb-3" style="color: white">
                    <label>Nhập lại mật khẩu mới:</label>
                    <InputText @bind-Value="resetPasswordModel.ConfirmPassword" type="password"
                               class="form-control"
                               placeholder="Nhập lại mật khẩu mới"
                               title="Xác nhận lại mật khẩu" />
                    <ValidationMessage For="@(() => resetPasswordModel.ConfirmPassword)" />
                </div>

                <div class="d-grid">
                    <button type="submit" class="btn btn-outline-secondary">Đặt lại mật khẩu</button>
                </div>
            </EditForm>
        }
        else if (!string.IsNullOrEmpty(infoMessage))
        {
            <div class="alert alert-success">@infoMessage</div>
            <div class="d-flex justify-content-center">
                <button class="btn btn-success mt-2" @onclick="@(() => NavigationManager.NavigateTo("/dangnhap"))">
                    Quay lại đăng nhập
                </button>
            </div>
        }
    </div>

@code {
    [SupplyParameterFromQuery]
    public string? token { get; set; }

    [SupplyParameterFromQuery]
    public string? email { get; set; }

    private ResetPasswordDTO resetPasswordModel = new ResetPasswordDTO();
    private bool ShowErrors = false;
    private string ErrorMessage = "";
    private bool resettingPassword = false;
    private string? infoMessage = null;

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(token) && !string.IsNullOrEmpty(email))
        {
            var user = await DbContext.NguoiDungs.Where(p => !p.DaXoa)
                .FirstOrDefaultAsync(u => u.Email == email && u.ResetToken == token && u.ResetTokenExpiry > DateTime.UtcNow);

            if (user != null)
            {
                resettingPassword = true;
                resetPasswordModel.Email = email;
            }
            else
            {
                ShowErrors = true;
                ErrorMessage = "Liên kết đặt lại mật khẩu không hợp lệ hoặc đã hết hạn.";
            }
        }
        else
        {
            ShowErrors = true;
            ErrorMessage = "Liên kết không hợp lệ.";
        }
    }

    private async Task HandleResetNewPassword()
    {
        ShowErrors = false;
        if (resetPasswordModel.NewPassword != resetPasswordModel.ConfirmPassword)
        {
            ShowErrors = true;
            ErrorMessage = "Mật khẩu không khớp.";
            return;
        }

        var user = await DbContext.NguoiDungs
            .FirstOrDefaultAsync(u => u.Email == resetPasswordModel.Email);

        if (user != null)
        {
            user.MatKhau = PasswordHelper.HashPassword(resetPasswordModel.NewPassword);
            user.ResetToken = null;
            user.ResetTokenExpiry = null;
            await DbContext.SaveChangesAsync();

            infoMessage = "Bạn đã đặt lại mật khẩu thành công. Vui lòng đăng nhập.";
            resettingPassword = false;
        }
        else
        {
            ShowErrors = true;
            ErrorMessage = "Không tìm thấy người dùng.";
        }
    }
}
