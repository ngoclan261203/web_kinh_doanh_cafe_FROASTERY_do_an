@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="custom-error-box alert alert-danger shadow">
        @ErrorMessage
    </div>
}

@code {
    [Parameter]
    public string? ErrorMessage { get; set; }

    [Parameter]
    public EventCallback OnClear { get; set; }

    private System.Timers.Timer? timer;

    protected override void OnParametersSet()
    {
        if (!string.IsNullOrEmpty(ErrorMessage))
        {
            StartErrorTimer();
        }
    }

    private void StartErrorTimer()
    {
        timer?.Dispose();

        timer = new System.Timers.Timer(4000);
        timer.Elapsed += async (sender, args) =>
        {
            await InvokeAsync(() =>
            {
                timer?.Dispose();
                OnClear.InvokeAsync();
            });
        };
        timer.AutoReset = false;
        timer.Start();
    }
}


<style>
    .custom-error-box {
    position: fixed;
    top: 1.25rem;
    right: 1.5rem;
    z-index: 9999;
    min-width: 280px;
    max-width: 500px;
    padding: 1rem 1.25rem;
    border-radius: 8px;
    background-color: #f8d7da;
    color: #721c24;
    border: 1px solid #f5c6cb;
    box-shadow: 0px 2px 10px rgba(0,0,0,0.2);
    animation: fade-in 0.3s ease-out;
    pointer-events: none;
}

</style>