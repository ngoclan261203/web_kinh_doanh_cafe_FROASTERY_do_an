// <auto-generated />
using System;
using FROASTERY.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FROASTERY.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FROASTERY.Models.CTCBNguyenLieu", b =>
                {
                    b.Property<int>("MaCTCNNguyenLieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ma_ct_cn_nguyen_lieu");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaCTCNNguyenLieu"));

                    b.Property<int>("MaCheBien")
                        .HasColumnType("int")
                        .HasColumnName("ma_che_bien");

                    b.Property<int>("MaNguyenLieu")
                        .HasColumnType("int")
                        .HasColumnName("ma_nguyen_lieu");

                    b.Property<double?>("SoLuong")
                        .HasColumnType("float")
                        .HasColumnName("so_luong_nl");

                    b.HasKey("MaCTCNNguyenLieu");

                    b.HasIndex("MaCheBien");

                    b.HasIndex("MaNguyenLieu");

                    b.ToTable("CTCBNguyenLieu");
                });

            modelBuilder.Entity("FROASTERY.Models.CheBien", b =>
                {
                    b.Property<int>("MaCheBien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ma_che_bien");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaCheBien"));

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit")
                        .HasColumnName("da_xoa");

                    b.Property<int?>("MaCongThuc")
                        .HasColumnType("int")
                        .HasColumnName("ma_cong_thuc");

                    b.Property<int>("MaSanPham")
                        .HasColumnType("int")
                        .HasColumnName("ma_san_pham");

                    b.Property<int?>("SoLuongSP")
                        .HasColumnType("int")
                        .HasColumnName("so_luong_sp");

                    b.Property<DateTime>("ThoiGian")
                        .HasColumnType("datetime2")
                        .HasColumnName("thoi_gian");

                    b.HasKey("MaCheBien");

                    b.HasIndex("MaCongThuc");

                    b.HasIndex("MaSanPham");

                    b.ToTable("CheBien");
                });

            modelBuilder.Entity("FROASTERY.Models.ChiTietDonHang", b =>
                {
                    b.Property<int>("MaChiTietDonHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ma_chi_tiet_don_hang");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChiTietDonHang"));

                    b.Property<int>("MaDonHang")
                        .HasColumnType("int")
                        .HasColumnName("ma_don_hang");

                    b.Property<int>("MaSanPham")
                        .HasColumnType("int")
                        .HasColumnName("ma_san_pham");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int")
                        .HasColumnName("so_luong");

                    b.Property<double?>("ThanhTien")
                        .HasColumnType("float")
                        .HasColumnName("thanh_tien");

                    b.HasKey("MaChiTietDonHang");

                    b.HasIndex("MaDonHang");

                    b.HasIndex("MaSanPham");

                    b.ToTable("ChiTietDonHang");
                });

            modelBuilder.Entity("FROASTERY.Models.ChiTietPhieuNhapNguyenLieu", b =>
                {
                    b.Property<int>("MaChiTietPhieuNhap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ma_chi_tiet_phieu_nhap");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChiTietPhieuNhap"));

                    b.Property<double?>("GiaNhap")
                        .HasColumnType("float")
                        .HasColumnName("gia_nhap");

                    b.Property<int>("MaNguyenLieu")
                        .HasColumnType("int")
                        .HasColumnName("ma_nguyen_lieu");

                    b.Property<int>("MaPhieuNhap")
                        .HasColumnType("int")
                        .HasColumnName("ma_phieu_nhap");

                    b.Property<double?>("SoLuong")
                        .HasColumnType("float")
                        .HasColumnName("so_luong");

                    b.Property<double?>("ThanhTien")
                        .HasColumnType("float")
                        .HasColumnName("thanh_tien");

                    b.HasKey("MaChiTietPhieuNhap");

                    b.HasIndex("MaNguyenLieu");

                    b.HasIndex("MaPhieuNhap");

                    b.ToTable("ChiTietPhieuNhapNguyenLieu");
                });

            modelBuilder.Entity("FROASTERY.Models.ChiTietQuaTangDonHang", b =>
                {
                    b.Property<int>("MaChiTietQuaTang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ma_chi_tiet_qua_tang");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChiTietQuaTang"));

                    b.Property<int>("MaDonHang")
                        .HasColumnType("int")
                        .HasColumnName("ma_don_hang");

                    b.Property<int>("MaSanPhamQuaTang")
                        .HasColumnType("int")
                        .HasColumnName("ma_san_pham_qua_tang");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int")
                        .HasColumnName("so_luong");

                    b.HasKey("MaChiTietQuaTang");

                    b.HasIndex("MaDonHang");

                    b.HasIndex("MaSanPhamQuaTang");

                    b.ToTable("ChiTietQuaTangDonHang");
                });

            modelBuilder.Entity("FROASTERY.Models.CongThuc", b =>
                {
                    b.Property<int>("MaCongThuc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ma_cong_thuc");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaCongThuc"));

                    b.Property<string>("CongThucMoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cong_thuc");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit")
                        .HasColumnName("da_xoa");

                    b.Property<int>("MaSanPham")
                        .HasColumnType("int")
                        .HasColumnName("ma_san_pham");

                    b.HasKey("MaCongThuc");

                    b.HasIndex("MaSanPham")
                        .IsUnique();

                    b.ToTable("CongThuc");
                });

            modelBuilder.Entity("FROASTERY.Models.DanhGia", b =>
                {
                    b.Property<int>("MaDanhGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ma_danh_gia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDanhGia"));

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit")
                        .HasColumnName("da_xoa");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ghi_chu");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ho_ten_khach");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("noi_dung");

                    b.Property<int>("SoSao")
                        .HasColumnType("int")
                        .HasColumnName("SoSao");

                    b.Property<DateTime>("ThoiGianGui")
                        .HasColumnType("datetime2")
                        .HasColumnName("ThoiGianGui");

                    b.Property<string>("ThongTinLienLac")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("thong_tin_lien_lac");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int")
                        .HasColumnName("TrangThai");

                    b.HasKey("MaDanhGia");

                    b.ToTable("DanhGia");
                });

            modelBuilder.Entity("FROASTERY.Models.DieuKienKhuyenMai", b =>
                {
                    b.Property<int>("MaChiTiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ma_chi_tiet");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChiTiet"));

                    b.Property<double?>("GiaTriDonHang")
                        .HasColumnType("float")
                        .HasColumnName("gia_tri_don_hang");

                    b.Property<double?>("GiaTriDonHangDen")
                        .HasColumnType("float")
                        .HasColumnName("gia_tri_don_hang_den");

                    b.Property<double?>("GiaTriDonHangTu")
                        .HasColumnType("float")
                        .HasColumnName("gia_tri_don_hang_tu");

                    b.Property<double?>("GiaTriGiam")
                        .HasColumnType("float")
                        .HasColumnName("gia_tri_giam");

                    b.Property<string>("KieuApDung")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("kieu_ap_dung");

                    b.Property<string>("KieuGiam")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("kieu_giam");

                    b.Property<int>("MaSuKien")
                        .HasColumnType("int")
                        .HasColumnName("ma_su_kien");

                    b.Property<int?>("SoLuongYeuCau")
                        .HasColumnType("int")
                        .HasColumnName("so_luong_yeu_cau");

                    b.HasKey("MaChiTiet");

                    b.HasIndex("MaSuKien");

                    b.ToTable("DieuKienKhuyenMai");
                });

            modelBuilder.Entity("FROASTERY.Models.DieuKien_QuaTang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MaChiTiet")
                        .HasColumnType("int")
                        .HasColumnName("ma_chi_tiet");

                    b.Property<int>("MaSanPham")
                        .HasColumnType("int")
                        .HasColumnName("ma_san_pham");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int")
                        .HasColumnName("so_luong");

                    b.HasKey("Id");

                    b.HasIndex("MaChiTiet");

                    b.HasIndex("MaSanPham");

                    b.ToTable("DieuKien_QuaTang");
                });

            modelBuilder.Entity("FROASTERY.Models.DieuKien_SanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MaChiTiet")
                        .HasColumnType("int")
                        .HasColumnName("ma_chi_tiet");

                    b.Property<int>("MaSanPham")
                        .HasColumnType("int")
                        .HasColumnName("ma_san_pham");

                    b.HasKey("Id");

                    b.HasIndex("MaChiTiet");

                    b.HasIndex("MaSanPham");

                    b.ToTable("DieuKien_SanPham");
                });

            modelBuilder.Entity("FROASTERY.Models.DoiTac", b =>
                {
                    b.Property<int>("MaDoiTac")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ma_doi_tac");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDoiTac"));

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit")
                        .HasColumnName("da_xoa");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("dia_chi");

                    b.Property<double?>("DuNo")
                        .HasColumnType("float")
                        .HasColumnName("du_no");

                    b.Property<bool>("KhachHang")
                        .HasColumnType("bit")
                        .HasColumnName("khach_hang");

                    b.Property<bool>("NhaCungCap")
                        .HasColumnType("bit")
                        .HasColumnName("nha_cung_cap");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ten");

                    b.Property<string>("ThongTinLienLac")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("thong_tin_lien_lac");

                    b.HasKey("MaDoiTac");

                    b.ToTable("DoiTac");
                });

            modelBuilder.Entity("FROASTERY.Models.DonHang", b =>
                {
                    b.Property<int>("MaDonHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ma_don_hang");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDonHang"));

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit")
                        .HasColumnName("da_xoa");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("dia_chi");

                    b.Property<bool?>("LoaiDon")
                        .HasColumnType("bit")
                        .HasColumnName("loai_don");

                    b.Property<int?>("MaDoiTac")
                        .HasColumnType("int")
                        .HasColumnName("ma_doi_tac");

                    b.Property<int?>("MaKhuyenMai")
                        .HasColumnType("int")
                        .HasColumnName("ma_khuyen_mai");

                    b.Property<int?>("MaNguoiDung")
                        .HasColumnType("int")
                        .HasColumnName("ma_nguoi_dung");

                    b.Property<string>("PhuongThucThanhToan")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("phuong_thuc_tt");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ten");

                    b.Property<DateTime?>("ThoiGian")
                        .HasColumnType("datetime2")
                        .HasColumnName("thoi_gian");

                    b.Property<string>("ThongTinLienLac")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("thong_tin_lien_lac");

                    b.Property<double?>("TongTien")
                        .HasColumnType("float")
                        .HasColumnName("tong_tien");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trang_thai");

                    b.HasKey("MaDonHang");

                    b.HasIndex("MaDoiTac");

                    b.HasIndex("MaKhuyenMai");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("DonHang");
                });

            modelBuilder.Entity("FROASTERY.Models.GioHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Chon")
                        .HasColumnType("bit")
                        .HasColumnName("chon");

                    b.Property<int>("MaNguoiDung")
                        .HasColumnType("int")
                        .HasColumnName("ma_nguoi_dung");

                    b.Property<int>("MaSanPham")
                        .HasColumnType("int")
                        .HasColumnName("ma_san_pham");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int")
                        .HasColumnName("so_luong");

                    b.HasKey("Id");

                    b.HasIndex("MaNguoiDung");

                    b.HasIndex("MaSanPham");

                    b.ToTable("GioHang");
                });

            modelBuilder.Entity("FROASTERY.Models.LoaiSanPham", b =>
                {
                    b.Property<int>("MaLoaiSP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ma_loai_sp");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLoaiSP"));

                    b.Property<string>("Anh")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("anh");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit")
                        .HasColumnName("da_xoa");

                    b.Property<string>("TenLoaiSP")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ten_loai_sp");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit")
                        .HasColumnName("trang_thai");

                    b.HasKey("MaLoaiSP");

                    b.HasIndex("TenLoaiSP")
                        .IsUnique();

                    b.ToTable("LoaiSanPham");
                });

            modelBuilder.Entity("FROASTERY.Models.LoaiTin", b =>
                {
                    b.Property<int>("MaLoaiTin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ma_loai_tin");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLoaiTin"));

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit")
                        .HasColumnName("da_xoa");

                    b.Property<string>("TenLoaiTin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ten_loai_tin");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit")
                        .HasColumnName("trang_thai");

                    b.HasKey("MaLoaiTin");

                    b.HasIndex("TenLoaiTin")
                        .IsUnique();

                    b.ToTable("LoaiTin");
                });

            modelBuilder.Entity("FROASTERY.Models.NguoiDung", b =>
                {
                    b.Property<int>("MaNguoiDung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ma_nguoi_dung");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNguoiDung"));

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit")
                        .HasColumnName("da_xoa");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ho_ten");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("mat_khau");

                    b.Property<string>("ResetToken")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reset_token");

                    b.Property<DateTime?>("ResetTokenExpiry")
                        .HasColumnType("datetime2")
                        .HasColumnName("reset_token_expiry");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("so_dien_thoai");

                    b.HasKey("MaNguoiDung");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("NguoiDung");
                });

            modelBuilder.Entity("FROASTERY.Models.NguyenLieu", b =>
                {
                    b.Property<int>("MaNguyenLieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ma_nguyen_lieu");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNguyenLieu"));

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit")
                        .HasColumnName("da_xoa");

                    b.Property<string>("DonViTinh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("don_vi_tinh");

                    b.Property<double?>("SoLuong")
                        .HasColumnType("float")
                        .HasColumnName("so_luong");

                    b.Property<string>("TenNguyenLieu")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ten_nguyen_lieu");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit")
                        .HasColumnName("trang_thai");

                    b.HasKey("MaNguyenLieu");

                    b.HasIndex("TenNguyenLieu")
                        .IsUnique();

                    b.ToTable("NguyenLieu");
                });

            modelBuilder.Entity("FROASTERY.Models.PhanQuyen", b =>
                {
                    b.Property<int>("MaPhanQuyen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ma_phan_quyen");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhanQuyen"));

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit")
                        .HasColumnName("da_xoa");

                    b.Property<int>("MaNguoiDung")
                        .HasColumnType("int")
                        .HasColumnName("ma_nguoi_dung");

                    b.Property<int>("MaQuyen")
                        .HasColumnType("int")
                        .HasColumnName("ma_quyen");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit")
                        .HasColumnName("trang_thai");

                    b.HasKey("MaPhanQuyen");

                    b.HasIndex("MaQuyen");

                    b.HasIndex("MaNguoiDung", "MaQuyen")
                        .IsUnique();

                    b.ToTable("PhanQuyen");
                });

            modelBuilder.Entity("FROASTERY.Models.PhieuChi", b =>
                {
                    b.Property<int>("MaPhieuChi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ma_phieu_chi");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhieuChi"));

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit")
                        .HasColumnName("da_xoa");

                    b.Property<int>("MaDoiTac")
                        .HasColumnType("int")
                        .HasColumnName("ma_doi_tac");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("noi_dung");

                    b.Property<double>("SoTien")
                        .HasColumnType("float")
                        .HasColumnName("so_tien");

                    b.Property<DateTime>("ThoiGian")
                        .HasColumnType("datetime")
                        .HasColumnName("thoi_gian");

                    b.HasKey("MaPhieuChi");

                    b.HasIndex("MaDoiTac");

                    b.ToTable("PhieuChi");
                });

            modelBuilder.Entity("FROASTERY.Models.PhieuNhap", b =>
                {
                    b.Property<int>("MaPhieuNhap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ma_phieu_nhap");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhieuNhap"));

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit")
                        .HasColumnName("da_xoa");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ghi_chu");

                    b.Property<int>("MaDoiTac")
                        .HasColumnType("int")
                        .HasColumnName("ma_doi_tac");

                    b.Property<DateTime?>("ThoiGian")
                        .HasColumnType("datetime2")
                        .HasColumnName("thoi_gian");

                    b.Property<double?>("TongTien")
                        .HasColumnType("float")
                        .HasColumnName("tong_tien");

                    b.HasKey("MaPhieuNhap");

                    b.HasIndex("MaDoiTac");

                    b.ToTable("PhieuNhap");
                });

            modelBuilder.Entity("FROASTERY.Models.PhieuThu", b =>
                {
                    b.Property<int>("MaPhieuThu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ma_phieu_thu");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhieuThu"));

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit")
                        .HasColumnName("da_xoa");

                    b.Property<int>("MaDoiTac")
                        .HasColumnType("int")
                        .HasColumnName("ma_doi_tac");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("noi_dung");

                    b.Property<double>("SoTien")
                        .HasColumnType("float")
                        .HasColumnName("so_tien");

                    b.Property<DateTime>("ThoiGian")
                        .HasColumnType("datetime")
                        .HasColumnName("thoi_gian");

                    b.HasKey("MaPhieuThu");

                    b.HasIndex("MaDoiTac");

                    b.ToTable("PhieuThu");
                });

            modelBuilder.Entity("FROASTERY.Models.Quyen", b =>
                {
                    b.Property<int>("MaQuyen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ma_quyen");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaQuyen"));

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit")
                        .HasColumnName("da_xoa");

                    b.Property<string>("TenQuyen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ten_quyen");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit")
                        .HasColumnName("trang_thai");

                    b.HasKey("MaQuyen");

                    b.HasIndex("TenQuyen")
                        .IsUnique();

                    b.ToTable("Quyen");
                });

            modelBuilder.Entity("FROASTERY.Models.SanPham", b =>
                {
                    b.Property<int>("MaSanPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ma_san_pham");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaSanPham"));

                    b.Property<string>("Anh")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("anh");

                    b.Property<string>("ChiTiet")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("chi_tiet");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit")
                        .HasColumnName("da_xoa");

                    b.Property<double?>("Gia")
                        .HasColumnType("float")
                        .HasColumnName("gia");

                    b.Property<int>("MaLoaiSP")
                        .HasColumnType("int")
                        .HasColumnName("ma_loai_sp");

                    b.Property<string>("MoTa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("mo_ta");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int")
                        .HasColumnName("so_luong");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ten_san_pham");

                    b.HasKey("MaSanPham");

                    b.HasIndex("MaLoaiSP");

                    b.HasIndex("TenSanPham")
                        .IsUnique();

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("FROASTERY.Models.SuKien", b =>
                {
                    b.Property<int>("MaSuKien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ma_su_kien");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaSuKien"));

                    b.Property<string>("Anh")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("hinh_anh");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit")
                        .HasColumnName("da_xoa");

                    b.Property<string>("LapLaiTheoTuan")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("lap_lai_theo_tuan");

                    b.Property<int>("MaLoaiTin")
                        .HasColumnType("int")
                        .HasColumnName("ma_loai_tin");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("noi_dung");

                    b.Property<DateTime?>("ThoiGianBatDau")
                        .HasColumnType("datetime2")
                        .HasColumnName("tg_bat_dau");

                    b.Property<DateTime?>("ThoiGianKetThuc")
                        .HasColumnType("datetime2")
                        .HasColumnName("tg_ket_thuc");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tieu_de");

                    b.HasKey("MaSuKien");

                    b.HasIndex("MaLoaiTin");

                    b.ToTable("SuKien");
                });

            modelBuilder.Entity("FROASTERY.Models.TinTuc", b =>
                {
                    b.Property<int>("MaTinTuc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ma_tin_tuc");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTinTuc"));

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit")
                        .HasColumnName("da_xoa");

                    b.Property<string>("FileDinhKem")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("file_dinh_kem");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("hinh_anh");

                    b.Property<int>("MaLoaiTin")
                        .HasColumnType("int")
                        .HasColumnName("ma_loai_tin");

                    b.Property<DateTime>("ThoiGian")
                        .HasColumnType("datetime2")
                        .HasColumnName("thoi_gian");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tieu_de");

                    b.HasKey("MaTinTuc");

                    b.HasIndex("MaLoaiTin");

                    b.ToTable("TinTuc");
                });

            modelBuilder.Entity("FROASTERY.Models.CTCBNguyenLieu", b =>
                {
                    b.HasOne("FROASTERY.Models.CheBien", "CheBien")
                        .WithMany("CTCBNguyenLieus")
                        .HasForeignKey("MaCheBien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FROASTERY.Models.NguyenLieu", "NguyenLieu")
                        .WithMany("CTCBNguyenLieus")
                        .HasForeignKey("MaNguyenLieu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CheBien");

                    b.Navigation("NguyenLieu");
                });

            modelBuilder.Entity("FROASTERY.Models.CheBien", b =>
                {
                    b.HasOne("FROASTERY.Models.CongThuc", "CongThuc")
                        .WithMany("CheBiens")
                        .HasForeignKey("MaCongThuc");

                    b.HasOne("FROASTERY.Models.SanPham", "SanPham")
                        .WithMany("CheBiens")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CongThuc");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("FROASTERY.Models.ChiTietDonHang", b =>
                {
                    b.HasOne("FROASTERY.Models.DonHang", "DonHang")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("MaDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FROASTERY.Models.SanPham", "SanPham")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("FROASTERY.Models.ChiTietPhieuNhapNguyenLieu", b =>
                {
                    b.HasOne("FROASTERY.Models.NguyenLieu", "NguyenLieu")
                        .WithMany("ChiTietPhieuNhapNguyenLieus")
                        .HasForeignKey("MaNguyenLieu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FROASTERY.Models.PhieuNhap", "PhieuNhap")
                        .WithMany("ChiTietPhieuNhapNguyenLieus")
                        .HasForeignKey("MaPhieuNhap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguyenLieu");

                    b.Navigation("PhieuNhap");
                });

            modelBuilder.Entity("FROASTERY.Models.ChiTietQuaTangDonHang", b =>
                {
                    b.HasOne("FROASTERY.Models.DonHang", "DonHang")
                        .WithMany("ChiTietQuaTangDonHangs")
                        .HasForeignKey("MaDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FROASTERY.Models.SanPham", "SanPhamQuaTang")
                        .WithMany("ChiTietQuaTangDonHangs")
                        .HasForeignKey("MaSanPhamQuaTang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("SanPhamQuaTang");
                });

            modelBuilder.Entity("FROASTERY.Models.CongThuc", b =>
                {
                    b.HasOne("FROASTERY.Models.SanPham", "SanPham")
                        .WithOne("CongThuc")
                        .HasForeignKey("FROASTERY.Models.CongThuc", "MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("FROASTERY.Models.DieuKienKhuyenMai", b =>
                {
                    b.HasOne("FROASTERY.Models.SuKien", "SuKien")
                        .WithMany("DieuKienKhuyenMais")
                        .HasForeignKey("MaSuKien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SuKien");
                });

            modelBuilder.Entity("FROASTERY.Models.DieuKien_QuaTang", b =>
                {
                    b.HasOne("FROASTERY.Models.DieuKienKhuyenMai", "DieuKienKhuyenMai")
                        .WithMany("QuaTangs")
                        .HasForeignKey("MaChiTiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FROASTERY.Models.SanPham", "SanPham")
                        .WithMany("QuaTangs")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DieuKienKhuyenMai");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("FROASTERY.Models.DieuKien_SanPham", b =>
                {
                    b.HasOne("FROASTERY.Models.DieuKienKhuyenMai", "DieuKienKhuyenMai")
                        .WithMany("DKSanPhams")
                        .HasForeignKey("MaChiTiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FROASTERY.Models.SanPham", "SanPham")
                        .WithMany("DKSanPhams")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DieuKienKhuyenMai");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("FROASTERY.Models.DonHang", b =>
                {
                    b.HasOne("FROASTERY.Models.DoiTac", "DoiTac")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaDoiTac");

                    b.HasOne("FROASTERY.Models.SuKien", "KhuyenMai")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaKhuyenMai");

                    b.HasOne("FROASTERY.Models.NguoiDung", "NguoiDung")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaNguoiDung");

                    b.Navigation("DoiTac");

                    b.Navigation("KhuyenMai");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("FROASTERY.Models.GioHang", b =>
                {
                    b.HasOne("FROASTERY.Models.NguoiDung", "NguoiDung")
                        .WithMany("GioHangs")
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FROASTERY.Models.SanPham", "SanPham")
                        .WithMany("GioHangs")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("FROASTERY.Models.PhanQuyen", b =>
                {
                    b.HasOne("FROASTERY.Models.NguoiDung", "NguoiDung")
                        .WithMany("PhanQuyens")
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FROASTERY.Models.Quyen", "Quyen")
                        .WithMany("PhanQuyens")
                        .HasForeignKey("MaQuyen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");

                    b.Navigation("Quyen");
                });

            modelBuilder.Entity("FROASTERY.Models.PhieuChi", b =>
                {
                    b.HasOne("FROASTERY.Models.DoiTac", "DoiTac")
                        .WithMany("PhieuChis")
                        .HasForeignKey("MaDoiTac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoiTac");
                });

            modelBuilder.Entity("FROASTERY.Models.PhieuNhap", b =>
                {
                    b.HasOne("FROASTERY.Models.DoiTac", "DoiTac")
                        .WithMany("PhieuNhaps")
                        .HasForeignKey("MaDoiTac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoiTac");
                });

            modelBuilder.Entity("FROASTERY.Models.PhieuThu", b =>
                {
                    b.HasOne("FROASTERY.Models.DoiTac", "DoiTac")
                        .WithMany("PhieuThus")
                        .HasForeignKey("MaDoiTac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoiTac");
                });

            modelBuilder.Entity("FROASTERY.Models.SanPham", b =>
                {
                    b.HasOne("FROASTERY.Models.LoaiSanPham", "LoaiSanPham")
                        .WithMany("SanPhams")
                        .HasForeignKey("MaLoaiSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiSanPham");
                });

            modelBuilder.Entity("FROASTERY.Models.SuKien", b =>
                {
                    b.HasOne("FROASTERY.Models.LoaiTin", "LoaiTin")
                        .WithMany("SuKiens")
                        .HasForeignKey("MaLoaiTin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiTin");
                });

            modelBuilder.Entity("FROASTERY.Models.TinTuc", b =>
                {
                    b.HasOne("FROASTERY.Models.LoaiTin", "LoaiTin")
                        .WithMany("TinTucs")
                        .HasForeignKey("MaLoaiTin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiTin");
                });

            modelBuilder.Entity("FROASTERY.Models.CheBien", b =>
                {
                    b.Navigation("CTCBNguyenLieus");
                });

            modelBuilder.Entity("FROASTERY.Models.CongThuc", b =>
                {
                    b.Navigation("CheBiens");
                });

            modelBuilder.Entity("FROASTERY.Models.DieuKienKhuyenMai", b =>
                {
                    b.Navigation("DKSanPhams");

                    b.Navigation("QuaTangs");
                });

            modelBuilder.Entity("FROASTERY.Models.DoiTac", b =>
                {
                    b.Navigation("DonHangs");

                    b.Navigation("PhieuChis");

                    b.Navigation("PhieuNhaps");

                    b.Navigation("PhieuThus");
                });

            modelBuilder.Entity("FROASTERY.Models.DonHang", b =>
                {
                    b.Navigation("ChiTietDonHangs");

                    b.Navigation("ChiTietQuaTangDonHangs");
                });

            modelBuilder.Entity("FROASTERY.Models.LoaiSanPham", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("FROASTERY.Models.LoaiTin", b =>
                {
                    b.Navigation("SuKiens");

                    b.Navigation("TinTucs");
                });

            modelBuilder.Entity("FROASTERY.Models.NguoiDung", b =>
                {
                    b.Navigation("DonHangs");

                    b.Navigation("GioHangs");

                    b.Navigation("PhanQuyens");
                });

            modelBuilder.Entity("FROASTERY.Models.NguyenLieu", b =>
                {
                    b.Navigation("CTCBNguyenLieus");

                    b.Navigation("ChiTietPhieuNhapNguyenLieus");
                });

            modelBuilder.Entity("FROASTERY.Models.PhieuNhap", b =>
                {
                    b.Navigation("ChiTietPhieuNhapNguyenLieus");
                });

            modelBuilder.Entity("FROASTERY.Models.Quyen", b =>
                {
                    b.Navigation("PhanQuyens");
                });

            modelBuilder.Entity("FROASTERY.Models.SanPham", b =>
                {
                    b.Navigation("CheBiens");

                    b.Navigation("ChiTietDonHangs");

                    b.Navigation("ChiTietQuaTangDonHangs");

                    b.Navigation("CongThuc");

                    b.Navigation("DKSanPhams");

                    b.Navigation("GioHangs");

                    b.Navigation("QuaTangs");
                });

            modelBuilder.Entity("FROASTERY.Models.SuKien", b =>
                {
                    b.Navigation("DieuKienKhuyenMais");

                    b.Navigation("DonHangs");
                });
#pragma warning restore 612, 618
        }
    }
}
